2018-12-22 06:25:06.685600 {"type":"join","timestamp":1545459906.6856,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"xmpp-social","nickname":"xmpp-social","username":"~xmpp-social","name":null,"photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":null,"modes":[]}
2018-12-22 09:11:34.640200 {"type":"message","timestamp":1545469894.6402,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"fr33domlover","nickname":"fr33domlover","username":"~fr33domlover","name":"fr33domlover","photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":"Hi people! When serializing RDF into compacted AS2, should I set the \"use native types\" flag to true?","modes":[]}
2018-12-22 09:11:54.569600 {"type":"message","timestamp":1545469914.5696,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"fr33domlover","nickname":"fr33domlover","username":"~fr33domlover","name":"fr33domlover","photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":"The default is false and in AS2 spec I didn't find mentions of it","modes":[]}
2018-12-22 09:12:26.387800 {"type":"message","timestamp":1545469946.3878,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"fr33domlover","nickname":"fr33domlover","username":"~fr33domlover","name":"fr33domlover","photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":"I did find an example that suggests that native types are used, but it's not enough to be sure so I'm asking here ^_^","modes":[]}
2018-12-22 10:47:19.255300 {"type":"join","timestamp":1545475639.2553,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"EyeCandyKitten","nickname":"EyeCandyKitten","username":"~MorganDiego","name":null,"photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":null,"modes":[]}
2018-12-22 17:15:29.724100 {"type":"message","timestamp":1545498929.7241,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"fr33domlover","nickname":"fr33domlover","username":"~fr33domlover","name":"fr33domlover","photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":"aaronpk, csarven perhaps you can help? :) ^","modes":[]}
2018-12-22 17:39:47.642600 {"type":"join","timestamp":1545500387.6426,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"jdormit_m","nickname":"jdormit_m","username":"~jdormit","name":null,"photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":null,"modes":[]}
2018-12-22 18:24:57.810000 {"type":"message","timestamp":1545503097.81,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"rhiaro","nickname":"rhiaro","username":"~opendataservices.p","name":"rhiaro","photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":"fr33domlover, I think it's up to you, depends on  your implementation. Life is probably easier if it's true though, because then they're native json datatypes. And it'll get correctly typed if you\/a consumer converts it back into another RDF syntax later","modes":[]}
2018-12-22 18:26:55.676400 {"type":"message","timestamp":1545503215.6764,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"rhiaro","nickname":"rhiaro","username":"~opendataservices.p","name":"rhiaro","photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":"But you also might want to keep the original literal strings (in which case leave it false)","modes":[]}
2018-12-22 18:28:25.667600 {"type":"message","timestamp":1545503305.6676,"network":"irc","server":"w3c","channel":{"uid":"#social","name":"#social"},"author":{"uid":"rhiaro","nickname":"rhiaro","username":"~opendataservices.p","name":"rhiaro","photo":null,"url":null,"tz":null,"host":"public.cloak"},"content":"(eg. if you have a literal \"2.0\" another rdf syntax and convert to jsonld with native types it'll be integer 2. If you don't use native types, it'll remain \"2.0\". Sorry if i'm explaining details you already know! Short answer is, the spec doesn't mind, I think)","modes":[]}
